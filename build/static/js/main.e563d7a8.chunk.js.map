{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","serviceWorker.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","App.js","redux/state.js","index.js"],"names":["module","exports","nav","item","active","dialogs","dialogsItems","dialog","messages","message","postsBlocks","posts","header","descriptionBlock","Boolean","window","location","hostname","match","Header","react_default","a","createElement","className","s","src","Navbar","NavLink","to","activeClassName","concat","Post","props","avatar","likeCount","MyPosts","postsElement","map","p","MyPosts_Post_Post","newPostElement","React","createRef","ref","value","newPostText","onChange","text","current","updateNewPost","onClick","addPost","ProfileInfo","Profile","content","MyPosts_ProfileInfo_ProfileInfo","Profile_MyPosts_MyPosts","profilePage","DialogItem","path","id","name","Message","Dialogs","dialogsElements","state","d","DialogsItem","messageElements","m","Dialogs_Message_Message","App","components_Header_Header","components_Navbar_Navbar","Route","render","components_Dialogs_Dialogs","dialogsPage","components_Profile_Profile","store","_state","sidebar","getState","this","_callSubscriber","console","log","newPost","likesCount","push","newText","subscride","observer","rerenderEntireTree","ReactDOM","BrowserRouter","src_App_0","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e563d7a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__XtPa1\",\"item\":\"Navbar_item__zCcHb\",\"active\":\"Navbar_active__2zfJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Pfn9P\",\"dialogsItems\":\"Dialogs_dialogsItems__1dTc9\",\"active\":\"Dialogs_active__OZ-Rc\",\"dialog\":\"Dialogs_dialog__23DWU\",\"messages\":\"Dialogs_messages__1078U\",\"message\":\"Dialogs_message__3z1aq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlocks\":\"MyPosts_postsBlocks__3oOqX\",\"posts\":\"MyPosts_posts__1tqsy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__SoqKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2pq9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__I6wgZ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nconst Header = () => {\r\nreturn <header className={s.header}>\r\n\t<img src='https://vk.com/images/svg_icons/ic_head_logo.svg' />\r\n</header>\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n    return( <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"\">News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"\">Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"\">Settings</NavLink>\r\n        </div>\r\n    </nav>)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src={props.avatar} />\r\n\t\t\t {props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like - {props.likeCount} </span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n\tlet postsElement = props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} avatar={p.avatar} />)\r\n\tlet newPostElement = React.createRef();\r\n\tlet addPost = () => {\r\n\t\tlet text = newPostElement.current.value;\r\n\t\tprops.addPost(text);\r\n\t\tprops.updateNewPost('');\r\n\r\n\t}\r\n\tlet onPostChange = () => {\r\n\t\tlet text = newPostElement.current.value;\r\n\t\tprops.updateNewPost(text);\r\n\r\n\t}\r\n\treturn (\r\n\t\t<div className={s.postsBlocks}>\r\n\t\t\t<h3> My posts</h3>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea ref={newPostElement} value={props.newPostText} onChange={onPostChange}></textarea>\r\n\t\t\t\t<div><button onClick={addPost}>Add post</button></div>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElement}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileInfo = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<img src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350' />\r\n\t\t\t</div>\r\n\t\t\t<div className={s.descriptionBlock}>\r\n\t\t\t\tava + description\r\n\t  \t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={s.content}>\r\n\t\t\t<ProfileInfo />\r\n\t\t\t<MyPosts posts={props.profilePage.posts}\r\n\t\t\t\tnewPostText={props.profilePage.newPostText}\r\n\t\t\t\taddPost={props.addPost}\r\n\t\t\t\tupdateNewPost={props.updateNewPost}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\nconst DialogItem = (props) => {\n\tlet path = \"/dialogs/\" + props.id;\n\n\treturn <div className={s.dialog + ' ' + s.active}>\n\t\t<NavLink to={path}>{props.name}</NavLink>\n\t</div>\n}\n\n\nexport default DialogItem","import React from 'react';\nimport s from './../Dialogs.module.css';\n\n\nconst Message = (props) => {\n\treturn <div className={s.message}>{props.message}</div>\n}\n\nexport default Message","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogsItem'\nimport Message from './Message/Message'\n\n\nconst Dialogs = (props) => {\n\n\tlet dialogsElements = props.state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\n\tlet messageElements = props.state.messages.map(m => <Message message={m.message} />);\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className={s.dialogsItems}>\n\t\t\t\t{dialogsElements}\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t{messageElements}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Dialogs","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport { Route } from \"react-router-dom\";\n\n\nconst App = (props) => {\n\n\treturn (\n\t\t<div className='app-wrapper'>\n\t\t\t<Header />\n\t\t\t<Navbar />\n\t\t\t<div className='app-wrapper-content'>\n\t\t\t\t<Route path='/dialogs' render={() =>\n\t\t\t\t\t<Dialogs\n\t\t\t\t\t\tstate={props.state.dialogsPage}\n\n\t\t\t\t\t/>}\n\t\t\t\t/>\n\t\t\t\t<Route path='/profile' render={() =>\n\t\t\t\t\t<Profile\n\t\t\t\t\t\tprofilePage={props.state.profilePage}\n\t\t\t\t\t\taddPost={props.addPost}\n\t\t\t\t\t\tupdateNewPost={props.updateNewPost}\n\t\t\t\t\t/>}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App;","let store = {\r\n\t_state: {\r\n\t\tprofilePage: {\r\n\t\t\tposts: [{ id: 1, message: \"Привет Ренат\", likeCount: 20, avatar: 'https://sun9-41.userapi.com/impf/c636325/v636325678/53370/s_y1_wRt4BY.jpg?size=200x0&quality=90&sign=13877ea449cd1246872f6b63339dbaf9&ava=1' }, { id: 2, message: \"Привет Матур кыз\", likeCount: 13, avatar: 'https://sun9-7.userapi.com/impf/c836634/v836634997/6b977/YqmIoFRZM5s.jpg?size=200x0&quality=90&sign=5e2bfa2f2fd4b2057b812d1ee60a1570&ava=1' }],\r\n\t\t\tnewPostText: 'it-kamasutra'\r\n\t\t},\r\n\t\tdialogsPage: {\r\n\t\t\tdialogs: [{ id: 1, name: 'Рамиль' }, { id: 2, name: 'Что кушаем' }, { id: 3, name: 'Диана' }, { id: 4, name: 'Макс' }, { id: 5, name: 'Работа' }, { id: 6, name: 'Папа' }, { id: 7, name: 'Папа' }, ],\r\n\t\t\tmessages: [{ id: 1, message: \"У нас сегодня акция\" }, { id: 2, message: \"Похуй и спасибо\" }, { id: 3, message: \"Спасибо высказили свое мнение\" }]\r\n\t\t},\r\n\t\tsidebar: {}\r\n\t},\r\n\tgetState() {\r\n\t\treturn this._state\r\n\t},\r\n\t_callSubscriber() {\r\n\t\tconsole.log('state was changes')\r\n\t},\r\n\taddPost() {\r\n\t\tlet newPost = {\r\n\t\t\tid: 5,\r\n\t\t\tmessage: this._state.profilePage.newPostText,\r\n\t\t\tlikesCount: 0\r\n\t\t}\r\n\t\tthis._state.profilePage.posts.push(newPost);\r\n\t\tthis._callSubscriber(this._state)\r\n\t},\r\n\tupdateNewPost(newText) {\r\n\t\tthis._state.profilePage.newPostText = newText\r\n\t\tthis._callSubscriber(this._state)\r\n\t},\r\n\tsubscride(observer) {\r\n\t\tthis._callSubscriber = observer;\r\n\t}\r\n}\r\nexport default store;\r\nwindow.store = store;\r\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./redux/state\";\n\n\nlet rerenderEntireTree = (state) => {\n\tReactDOM.render(<BrowserRouter BrowserRouter>\n\t\t<App state={state} addPost={store.addPost.bind(store)} updateNewPost={store.updateNewPost.bind(store)} />\n\t</BrowserRouter>, document.getElementById('root'));\n}\nrerenderEntireTree(store.getState());\nstore.subscride(rerenderEntireTree)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}